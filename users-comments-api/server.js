import express from "express";
import mongoose from "mongoose";
import userRoutes from "./routes/userRoutes.js";
import commentRoutes from "./routes/commentRoutes.js";
import { logger } from "./middleware/logger.js";
import { errorHandler, notFound } from "./middleware/errorHandler.js";

const app = express();
const PORT = process.env.PORT || 5001;
const MONGODB_URI = process.env.MONGODB_URI || "mongodb://127.0.0.1:27017/users_comments";

// =====================================================
// Middleware
// =====================================================

app.use(express.json());
app.use(express.urlencoded({ extended: true }));
app.use(logger);

// =====================================================
// –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ MongoDB
// =====================================================

mongoose.connect(MONGODB_URI)
    .then(() => {
        console.log('‚úÖ –ü—ñ–¥–∫–ª—é—á–µ–Ω–æ –¥–æ MongoDB');
        console.log(`üì¶ –ë–∞–∑–∞ –¥–∞–Ω–∏—Ö: ${mongoose.connection.name}`);
    })
    .catch((err) => {
        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ MongoDB:', err);
        process.exit(1);
    });

// =====================================================
// –ú–∞—Ä—à—Ä—É—Ç–∏
// =====================================================

// –ì–æ–ª–æ–≤–Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞
app.get('/', (req, res) => {
    res.json({
        message: 'Users & Comments API',
        version: '1.0.0',
        endpoints: {
            users: {
                'POST /users': '–°—Ç–≤–æ—Ä–∏—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞',
                'GET /users': '–û—Ç—Ä–∏–º–∞—Ç–∏ –≤—Å—ñ—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ (pagination: ?page=1&limit=10)',
                'GET /users/:id': '–û—Ç—Ä–∏–º–∞—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ –∫–æ–º–µ–Ω—Ç–∞—Ä—è–º–∏',
                'PUT /users/:id': '–û–Ω–æ–≤–∏—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞',
                'DELETE /users/:id': '–í–∏–¥–∞–ª–∏—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ (–∫–∞—Å–∫–∞–¥–Ω–µ –≤–∏–¥–∞–ª–µ–Ω–Ω—è –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ–≤)'
            },
            comments: {
                'POST /comments': '–°—Ç–≤–æ—Ä–∏—Ç–∏ –∫–æ–º–µ–Ω—Ç–∞—Ä',
                'GET /comments': '–û—Ç—Ä–∏–º–∞—Ç–∏ –≤—Å—ñ –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ (search: ?search=keyword, pagination: ?page=1&limit=10)',
                'GET /comments/user/:id': '–û—Ç—Ä–∏–º–∞—Ç–∏ –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞',
                'PUT /comments/:id': '–û–Ω–æ–≤–∏—Ç–∏ –∫–æ–º–µ–Ω—Ç–∞—Ä',
                'DELETE /comments/:id': '–í–∏–¥–∞–ª–∏—Ç–∏ –∫–æ–º–µ–Ω—Ç–∞—Ä'
            }
        }
    });
});

// API –º–∞—Ä—à—Ä—É—Ç–∏
app.use('/users', userRoutes);
app.use('/comments', commentRoutes);

// Health check
app.get('/health', (req, res) => {
    res.json({
        status: 'OK',
        timestamp: new Date().toISOString(),
        uptime: process.uptime(),
        database: mongoose.connection.readyState === 1 ? 'connected' : 'disconnected'
    });
});

// =====================================================
// –û–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–æ–∫
// =====================================================

app.use(notFound);
app.use(errorHandler);

// =====================================================
// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
// =====================================================

app.listen(PORT, () => {
    console.log(`\n‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó`);
    console.log(`‚ïë   Users & Comments API - Running     ‚ïë`);
    console.log(`‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù`);
    console.log(`üöÄ Server: http://localhost:${PORT}`);
    console.log(`üìö Docs:   http://localhost:${PORT}/`);
    console.log(`üíä Health: http://localhost:${PORT}/health\n`);
});

// Graceful shutdown
process.on('SIGINT', async () => {
    console.log('\nüëã –ó–∞–∫—Ä–∏—Ç—Ç—è —Å–µ—Ä–≤–µ—Ä–∞...');
    await mongoose.connection.close();
    console.log('‚úÖ –ó\'—î–¥–Ω–∞–Ω–Ω—è –∑ MongoDB –∑–∞–∫—Ä–∏—Ç–æ');
    process.exit(0);
});
