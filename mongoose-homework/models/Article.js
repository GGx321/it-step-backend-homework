const mongoose = require('mongoose');

// –ó–∞–≤–¥–∞–Ω–Ω—è 1: –°—Ö–µ–º–∞ –∑ –¥–µ—Ñ–æ–ª—Ç–Ω–∏–º–∏ –∑–Ω–∞—á–µ–Ω–Ω—è–º–∏
const articleSchema = new mongoose.Schema({
    title: {
        type: String,
        required: [true, '–ù–∞–∑–≤–∞ —Å—Ç–∞—Ç—Ç—ñ –æ–±–æ–≤\'—è–∑–∫–æ–≤–∞'],
        trim: true
    },
    body: {
        type: String,
        trim: true
    },
    likes: {
        type: Number,
        default: 0,
        min: [0, '–ö—ñ–ª—å–∫—ñ—Å—Ç—å –ª–∞–π–∫—ñ–≤ –Ω–µ –º–æ–∂–µ –±—É—Ç–∏ –≤—ñ–¥\'—î–º–Ω–æ—é']
    },
    createdAt: {
        type: Date,
        default: Date.now
    }
});

// –í—ñ—Ä—Ç—É–∞–ª—å–Ω–µ –ø–æ–ª–µ –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–æ–≤–∞–Ω–æ—ó –¥–∞—Ç–∏
articleSchema.virtual('formattedDate').get(function() {
    return this.createdAt.toLocaleDateString('uk-UA', {
        year: 'numeric',
        month: 'long',
        day: 'numeric',
        hour: '2-digit',
        minute: '2-digit'
    });
});

// –ú–µ—Ç–æ–¥ –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Å—Ç–∞—Ç—Ç—ñ
articleSchema.methods.display = function() {
    return `üìù ${this.title} | ‚ù§Ô∏è  ${this.likes} | üìÖ ${this.formattedDate}`;
};

// –°—Ç–∞—Ç–∏—á–Ω–∏–π –º–µ—Ç–æ–¥ –¥–ª—è –ø–æ—à—É–∫—É –ø–æ–ø—É–ª—è—Ä–Ω–∏—Ö —Å—Ç–∞—Ç–µ–π
articleSchema.statics.findPopular = function(minLikes) {
    return this.find({ likes: { $gte: minLikes } }).sort({ likes: -1 });
};

const Article = mongoose.model('Article', articleSchema);

module.exports = Article;
