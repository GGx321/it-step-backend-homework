const mongoose = require('mongoose');

// URL –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ MongoDB
const MONGODB_URI = process.env.MONGODB_URI || 'mongodb://localhost:27017/homework_db';

// –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ MongoDB
async function connectDB() {
    try {
        await mongoose.connect(MONGODB_URI);
        console.log('‚úÖ –ü—ñ–¥–∫–ª—é—á–µ–Ω–æ –¥–æ MongoDB');
        console.log(`üì¶ –ë–∞–∑–∞ –¥–∞–Ω–∏—Ö: ${mongoose.connection.name}`);
    } catch (error) {
        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ MongoDB:', error.message);
        process.exit(1);
    }
}

// –í—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –≤—ñ–¥ MongoDB
async function disconnectDB() {
    try {
        await mongoose.connection.close();
        console.log('\nüëã –ó\'—î–¥–Ω–∞–Ω–Ω—è –∑ MongoDB –∑–∞–∫—Ä–∏—Ç–æ');
    } catch (error) {
        console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä–∏—Ç—Ç—ñ –∑\'—î–¥–Ω–∞–Ω–Ω—è:', error.message);
    }
}

// –û—á–∏—â–µ–Ω–Ω—è –±–∞–∑–∏ –¥–∞–Ω–∏—Ö (–¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è)
async function clearDB() {
    try {
        await mongoose.connection.dropDatabase();
        console.log('üóëÔ∏è  –ë–∞–∑–∞ –¥–∞–Ω–∏—Ö –æ—á–∏—â–µ–Ω–∞');
    } catch (error) {
        console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—á–∏—â–µ–Ω–Ω—ñ –ë–î:', error.message);
    }
}

module.exports = {
    connectDB,
    disconnectDB,
    clearDB
};
